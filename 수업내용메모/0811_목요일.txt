0811 목요일
 
겍체지향 프로그래밍에서 자주사용하는 개념
객체지향 프로그래밍 : JavaScript, Java, C++, python, Ruby...

오버로딩 : 메소드 이름은 동일하나 파라미터 개수 , 타입은 달라야 성립
오버라이딩 :인터페이스 혹은 부모 클래스를 상속 받아서 메소드를 재정의 하는 개념

@Override
@ : 어노테이션 (Spring에서 많이 사용)


인터페이스
-인터페이스에서 작성하는 무조건 public
-인터페이스에서 로직을 구현할 수 없다 정의만
-인터페이스에를 사용하는 클래스는 무조건 인터페이스에서 정의한메소드를 무조건 사용해야한다
-자바에서는 다중상속이 불가능해서 인터페이스에서 다중상속을 구현함



**제네릭 컬렉션즈
<>: 제네릭
LIst, Map, Set, Vertor, LinkedList....;컬렉션즈

List<String> list = new ArrayList<String>();
List<Intger> list =  new ArrayList<Intger>();
제네릭 안에는 클래스 타입만 올수있다

** 자주 사용하는 list 문법(메소드)
list.add(); // 데이터 추가
list.get(); // 데이터를 가져오다
list.remove(); // 데이터삭제
list.size(); //배열 길이 가져오기

오늘 배우는 Map
Map<String, String> map = new HashMap<String, String> 
왼쪽 : key↑  ↑
오른쪽: value↑

즉, Map은 key와 value로 구성된 컬랙션(자료구조)
key는 중복될 수 없다
value는 중복 허용


