9월 5일 10:00시 전 까지 
숙제 폴더에 업로드 하기
파일 이름은 이름으로 수정해서 업로드하기
ex) 현상원_SQL숙제.txt

1. 사원이름, 사원직책, 사원급여 조회.
select ename, job, sal from emp

2. 사수번호가 7839인 사원 번호, 이름, 입사날짜 조회.
select empno, ename, hiredate, from emp where mgr = 7839


3. 급여가 3000 이하인 사원의 모든 정보 조회.
select * from emp where sal <= 3000

4. 사원이름, 부서번호, 부서이름, 부서 근무지 조회.
select e.ename as '사원이름', e.deptno as '부서번호', d.dname as '부서이름', d.loc as '부서 근무지' from emp as e 
inner join dept as d 
on e.deptno = d.deptno

5. 부서별 급여합계, 부서이름 조회.
select sum(e.sal) as '부서별 급여 합계', d.dname as '부서이름' from emp as e 
 inner join dept as d   
 on e.deptno = d.deptno
 group by e.deptno

6. 부서 근무지가 NEW YORK이고, 직책이 MANAGER인 
   사원의 이름, 급여를 조회. 
select e.ename, sal from emp as e   
 inner join dept as d
 on e.deptno = d.deptno
 where e.job = 'manager'

7. 1983년 이후 입사한 사원의 보너스가 null
   이면 100 주고, 사원의 이름, 부서이름, 직업을 조회. (ifnull 검색하기)
select 
 e.ename as '사원이름', 
 e.job as'직업', 
 d.dname as'부서이름', 
 ifnull(comm,100) 
 from emp as e
 inner join dept as d 
 on e.deptno = d.deptno
 where date_format(hiredate,'%Y')<= '1983'

8.  부서명이 RESEARCH인 사원의 이름, 급여, 근무 지역 조회.
select e.ename, e.sal, d.loc from emp as e
 inner join dept as d  
 on e.deptno = d.deptno 
 where d.dname = 'RESEARCH'

9. 보너스를 받은 사원 이름, 직책, 급여, 부서명 조회.
select e.ename, e.job, e.sal, d.dname from emp as e
 inner join dept as d
 on e.deptno = d.deptno
 where comm is not null

10. 이름 첫글 A자를 가진 사원 이름, 직책, 부서명, 부서 위치 조회.
select e.ename, e.job, d.dname, d.loc from emp as e
 inner join dept as d 
 on e.deptno = d.deptno
 where e.ename like 'A%'

11. 사원명, 사수번호, 사수 이름 조회.
   단, 사수가 없는 사원도 포함
select  u.ename, b.mgr, b.ename from emp as u
 right join emp as b 
 on u.empno = b.empno

12. 사원명, 사수번호, 사수 이름 조회.
   단, 사수가 없는 사원만
select  u.ename, b.mgr, b.ename from emp as u
  right join emp as b 
  on u.empno = b.EMPNO 
  where u.mgr is null

13. 상사번호가 7698인 사원의 이름, 사원번호, 상사번호, 상사이름 조회.
select u.ename, u.empno, b.mgr, b.ename from emp as u
 inner join emp as b 
 on b.mgr = u.empno
 where b.mgr = 7698

14. 상사보다 먼저 입사한 사원의 사원이름, 사원의 입사일, 상사 이름, 상사 입사일 조회.
select u.ename, u.hiredate, b.ename, b.hiredate from emp as u
 inner join emp as b 
 on b.empno = u.mgr 
 where u.hiredate < b.hiredate

15. 업무가 MANAGER이거나 CLERK고 입사날짜가 1982년에 입사한
 사원의 사원번호, 이름, 급여, 직업, 부서명 조회.
select e.empno, e.ename, e.sal, e.job, d.dname from emp as e
 inner join dept as d 
 on e.deptno = d.deptno 
 where  date_format(hiredate,'%Y') = '1982' 
 and e.job = 'manager' or  date_format(hiredate,'%Y') = '1982' 
 and e.job = 'CLERK'

16. 부서별 급여 총합 조회. 
    단, 사원이 존재하지 않는 부서도 포함해서 급여 순으로 내림차순 하시오.
select d.dname, sum(sal) from emp as e 
 right join dept as d 
 on e.deptno = d.deptno 
 group by dname 
 order by sum(sal) desc

17.  사원 이름, 상사 이름, 사원 부서번호, 사원 부서명, 사원 근무지역 조회. 
    단, 사원이 존재하지 않는 부서번호와 부서명도 조회.
select e.ename, b.ename, d.deptno, d.dname, d.loc from emp as e
right join dept as d 
on e.deptno = d.deptno 
inner join emp as b 
on e.empno = b.mgr  
where d.deptno is null

18. 부서 위치가 CHICAGO이고 사수 급여가 5000 미만인 
 사원 번호,사원 이름,사수 번호, 사수 이름, 사수 급여, 부서명을 조회.
 단, 사원의 입사날짜로 오름차순.
select 
e.empno as '사원번호', 
e.ename as '사원이름', 
b.ename as '시수번호', 
b.sal as '사수급여', 
d.dname as '부서명' from emp as e
right join emp as b 
on e.empno = b.mgr
inner join dept as d 
on e.deptno = d.deptno 
where d.loc = 'CHICAGO' and b.sal < 5000
order by e.hiredate 

19. 입사날짜를 월별로 몇명이 입사했는지 카운트해서 조회.
select date_format(hiredate, '%M'), count(empno)
from emp group by date_format(hiredate,'%M')